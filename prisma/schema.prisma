// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id              String      @id @default(uuid())
  name            String
  email           String?     @unique
  password        String
  role            String      @default("user")
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  isEmailVerified Boolean     @default(false)
  token           Token[]
  product         Product[]
  order           Order[]
}

model Token {
  id          String    @id @default(uuid())
  token       String    @db.VarChar(400)
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      String    
  type        String
  expires     DateTime  
  blacklisted Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Product {
  id              String      @id @default(uuid())
  name            String
  description     String
  price           Float       
  quantityInStock Int         
  category        Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId      String
  user            User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String
  orderItem       OrderItem[]
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model Category {
  id        String    @id @default(uuid())
  name      String
  product   Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Order {
  id            String      @id @default(uuid())
  date          DateTime    
  totalPrice    Float       
  customerName  String
  customerEmail String
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  orderItem     OrderItem[]
  createdAt     DateTime    @default(now())
  UpdatedAt     DateTime    @updatedAt
}

model OrderItem {
  id        String    @id @default(uuid())
  order     Order     @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String
  product   Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  quantity  Int       
  unitPrice Float     
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
